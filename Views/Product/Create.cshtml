@model PracticeApp.Models.Product

@{
    ViewData["Title"] = "Create";
}

<h4>Add New Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Create", "Product"))
        {
            <div class="form-group">
                @Html.LabelFor(x => x.Name)
                @Html.TextBoxFor(x => x.Name)
                @Html.ValidationMessageFor(x => x.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Description)
                @Html.TextBoxFor(x => x.Description)
                @Html.ValidationMessageFor(x => x.Description)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Image)
                @Html.TextBoxFor(x => x.Image)
                @Html.ValidationMessageFor(x => x.Image)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Price)
                @Html.TextBoxFor(x => x.Price)
                @Html.ValidationMessageFor(x => x.Price)
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        }

    </div>
</div>

<div>
    <a asp-action="Index">Back to Products</a>
</div>

<script>
    var data = {
        name: 'Melon Eyeshadow',
        price: '8.99',
        description: 'The perfect shade of pinky orange to flatter every skin type.',
        image: ''
    }

    fetch('/product/create/', {
        method: 'POST',
        body: JSON.stringify(data),
        headers: {
            Accept: 'application/json',
            "Content-Type": 'application/json'
        }
    })
        .then(function (res) {
            return res.json();
        })
        .then(function (myJson) {
            console.log(myJson);
        });
</script>

